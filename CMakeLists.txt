cmake_minimum_required(VERSION 2.8)
find_package(SWIG REQUIRED)
include(${SWIG_USE_FILE})
find_package(PythonLibs)
include_directories(${PYTHON_INCLUDE_PATH})
include_directories(${CMAKE_CURRENT_SOURCE_DIR})
include_directories(${PROJECT_BINARY_DIR})
set(CMAKE_CXX_FLAGS_RELEASE "-Wall -O2 -fPIC -std=c++11")
set(CMAKE_CXX_FLAGS_DEBUG "-Wall -g -DEA1_DEBUG -fPIC -std=c++11")
if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE "Release")
endif(NOT CMAKE_BUILD_TYPE)
add_subdirectory(ea1)
set(PROJECT_NAME probo)
set(PROBO_SRCS pfamily.cpp probo.cpp probopwm.cpp ppca9685.cpp)
set(PYTHON_IF_SRCS probopy.i)
set_source_files_properties(${PYTHON_IF_SRCS} PROPERTIES  CPLUSPLUS ON)
set_source_files_properties(${PYTHON_IF_SRCS} PROPERTIES  SWIG_FLAGS "-includeall")
set_source_files_properties(${PYTHON_IF_SRCS} PROPERTIES  SWIG_FLAGS "-Wall")
message("${PROJECT_NAME} CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}")
# probo core lib
add_library(probo STATIC ${PROBO_SRCS})
# PYTHON
swig_add_module(probopy python ${PYTHON_IF_SRCS})
swig_link_libraries(probopy probo ea1)
add_custom_target(probopy echo probopy for python)
add_dependencies(probopy ${SWIG_MODULE_probopy_REAL_NAME})
add_custom_command(
  TARGET probopy POST_BUILD
  COMMAND touch __init__.py
  )
